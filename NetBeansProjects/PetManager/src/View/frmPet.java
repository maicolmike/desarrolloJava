
package View;

import Controller.*;
import clases.*;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author maicol
 */
public class frmPet extends javax.swing.JFrame 
{
   // ctlPet ctlPet = new ctlPet ();  // asi tambien se puede hacer pero se eliminaria el codigo de this.ctlPet
    ctlPet ctlPet;
    // creo una lista de objetos de tipo clsDog
    LinkedList<clsDog> dogObjectList = new LinkedList<>();

    /**
     * Creates new form frmPet
     */
    public frmPet()
    {
        this.ctlPet = new ctlPet(); // construccion del puente de la vista
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        petList = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCodeCat = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNameCat = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBornYearCat = new javax.swing.JTextField();
        txtColorCat = new javax.swing.JTextField();
        cbHealthStatusCat = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbBreedCat = new javax.swing.JComboBox<>();
        btncrearCat = new javax.swing.JButton();
        btnBuscarCat = new javax.swing.JButton();
        btnEditarCat = new javax.swing.JButton();
        btnEliminarCat = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtCodeDog = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNameDog = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtBornYearDog = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtColorDog = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cbHealthStatusDog = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cbBreedDog = new javax.swing.JComboBox<>();
        btnBuscarDog = new javax.swing.JButton();
        btnEditarDog = new javax.swing.JButton();
        btnEliminarDog = new javax.swing.JButton();
        cbPedigree = new javax.swing.JCheckBox();
        btnCrearDog = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        setResizable(false);

        petList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "pet1", "pet2", "pet3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(petList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pet list", jPanel1);

        jLabel2.setText("Code");

        jLabel3.setText("name");

        jLabel4.setText("born year");

        jLabel5.setText("color");

        jLabel6.setText("Health status");

        txtBornYearCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBornYearCatActionPerformed(evt);
            }
        });

        txtColorCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColorCatActionPerformed(evt);
            }
        });

        cbHealthStatusCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sano", "Enfermo" }));

        jLabel7.setText("Breed");

        cbBreedCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Angora", "brunos" }));

        btncrearCat.setText("Crear");
        btncrearCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncrearCatActionPerformed(evt);
            }
        });

        btnBuscarCat.setText("Buscar");

        btnEditarCat.setText("editar");

        btnEliminarCat.setText("eliminar");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtColorCat)
                    .addComponent(txtNameCat)
                    .addComponent(txtBornYearCat)
                    .addComponent(txtCodeCat))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbBreedCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbHealthStatusCat, 0, 130, Short.MAX_VALUE))
                .addGap(42, 42, 42))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(182, Short.MAX_VALUE)
                .addComponent(btncrearCat)
                .addGap(18, 18, 18)
                .addComponent(btnBuscarCat)
                .addGap(18, 18, 18)
                .addComponent(btnEditarCat)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarCat)
                .addGap(108, 108, 108))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCodeCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cbHealthStatusCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNameCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtBornYearCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtColorCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cbBreedCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btncrearCat)
                    .addComponent(btnBuscarCat)
                    .addComponent(btnEditarCat)
                    .addComponent(btnEliminarCat))
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cat manager", jPanel2);

        jLabel8.setText("Code");

        jLabel9.setText("name");

        jLabel10.setText("born year");

        txtBornYearDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBornYearDogActionPerformed(evt);
            }
        });

        jLabel11.setText("color");

        txtColorDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColorDogActionPerformed(evt);
            }
        });

        jLabel12.setText("Health status");

        cbHealthStatusDog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sano", "Enfermo" }));

        jLabel13.setText("Breed");

        cbBreedDog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Husky", "pastor aleman", "criollo" }));

        btnBuscarDog.setText("Buscar");
        btnBuscarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDogActionPerformed(evt);
            }
        });

        btnEditarDog.setText("editar");
        btnEditarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarDogActionPerformed(evt);
            }
        });

        btnEliminarDog.setText("eliminar");
        btnEliminarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDogActionPerformed(evt);
            }
        });

        cbPedigree.setText("Pedigree");

        btnCrearDog.setText("crear");
        btnCrearDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearDogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtColorDog)
                    .addComponent(txtNameDog)
                    .addComponent(txtBornYearDog)
                    .addComponent(txtCodeDog))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbBreedDog, 0, 130, Short.MAX_VALUE)
                            .addComponent(cbHealthStatusDog, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(cbPedigree))
                .addGap(42, 42, 42))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(162, Short.MAX_VALUE)
                .addComponent(btnCrearDog)
                .addGap(39, 39, 39)
                .addComponent(btnBuscarDog)
                .addGap(18, 18, 18)
                .addComponent(btnEditarDog)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarDog)
                .addGap(108, 108, 108))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtCodeDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(cbHealthStatusDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtNameDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtBornYearDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtColorDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cbBreedDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(cbPedigree)))
                .addGap(42, 42, 42)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarDog)
                    .addComponent(btnEditarDog)
                    .addComponent(btnEliminarDog)
                    .addComponent(btnCrearDog))
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dog manager", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 605, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Go to veterinary", jPanel4);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("Pet Manager");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBornYearCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBornYearCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBornYearCatActionPerformed

    private void txtColorCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColorCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtColorCatActionPerformed

    private void txtBornYearDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBornYearDogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBornYearDogActionPerformed

    private void txtColorDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColorDogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtColorDogActionPerformed

    private void btnBuscarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDogActionPerformed
        
        String code = txtCodeDog.getText(); // tomo lo que ingresa en el txtCOdeDog
        clsDog dog = (clsDog)ctlPet.SearchPet(code, "Perro"); // conversion (clsDog)
        //clsPet dog = ctlPet.SearchPet(code, "Perro"); // forma antigua
       /*  boolean found = false; // defino una variable falsa 
        
       for (clsDog dog : dogObjectList) 
        {
            if (dog.getCode().equals(code)) 
            {
                   txtNameDog.setText(dog.getName());
                   txtColorDog.setText(dog.getColor());
                   txtBornYearDog.setText(dog.getBornYear()+""); // toca adicionarle +"" porque es un entero
                   cbHealthStatusDog.setSelectedItem(dog.getHealthStatus());
                   cbBreedDog.setSelectedItem(dog.getBreed());
                   cbPedigree.setSelected(dog.isPedigre());
                   
                   found = true;
                   break;        
            }
            
        } */
        if (dog == null) 
        {
            JOptionPane.showMessageDialog(this, "codigo no encontrado");
        }
        else 
        {
            txtNameDog.setText(dog.getName());
            txtColorDog.setText(dog.getColor());
            txtBornYearDog.setText(dog.getBornYear() + ""); // toca adicionarle +"" porque es un entero
            cbHealthStatusDog.setSelectedItem(dog.getHealthStatus());
            cbBreedDog.setSelectedItem(dog.getBreed());
            cbPedigree.setSelected(dog.isPedigre());
        }
        
    }//GEN-LAST:event_btnBuscarDogActionPerformed

    private void btnEditarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarDogActionPerformed
        String code = txtCodeDog.getText(); // tomo lo que ingresa en el txtCOdeDog
        boolean found = false; // defino una variable falsa 
        
        for (clsDog dog : dogObjectList) 
        {
            if (dog.getCode().equals(code)) 
            {
                String name = txtNameDog.getText();
                String color = txtColorDog.getText();
                int bornYear = Integer.parseInt(txtBornYearDog.getText());
                String breed = cbBreedDog.getSelectedItem().toString();
                String healthStatus = cbHealthStatusDog.getSelectedItem().toString();
                boolean pedigree = cbPedigree.isSelected();
                
                dog.setName(name);
                dog.setColor(color);
                dog.setBornYear(bornYear);
                dog.setHealthStatus(healthStatus);
                dog.setBreed(breed);
                dog.setPedigre(pedigree);
                
                found = true;
                
                JOptionPane.showMessageDialog(this, "Modificado correctamente");
                this.FillJlist(); // llamar el metodo para agregar a la lista
                this.clearDogFields(); // limpiar campos
                break;
            }  
        }
        if (!found) 
        {
            JOptionPane.showMessageDialog(this, "codigo no encontrado");
        }
    }//GEN-LAST:event_btnEditarDogActionPerformed

    private void btnEliminarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDogActionPerformed
        // TODO add your handling code here:
        String code = txtCodeDog.getText(); // tomo lo que ingresa en el txtCOdeDog
        boolean found = false; // defino una variable falsa 
        
        for (clsDog dog : dogObjectList) 
        {
            if (dog.getCode().equals(code)) 
            {
                found = true;
                this.dogObjectList.remove(dog); // eliminar de la lista
                JOptionPane.showMessageDialog(this, "Eliminado correctamente");
                this.FillJlist(); // llamar el metodo para agregar a la lista
                this.clearDogFields(); // limpiar campos
                break;
            }  
        }
        if (!found) 
        {
            JOptionPane.showMessageDialog(this, "codigo no encontrado");
        }
    }//GEN-LAST:event_btnEliminarDogActionPerformed

    private void btncrearCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncrearCatActionPerformed
        // TODO add your handling code here:
   /*    try 
       {
       String code = txtCodeCat.getText();
       String name = txtNameCat.getText();
       String color = txtColorCat.getText();
       int bornYear = Integer.parseInt(txtBornYearCat.getText());
       String breed = cbBreedCat.getSelectedItem().toString();
       String healthStatus = cbHealthStatusCat.getSelectedItem().toString();
       
       // validar que el usuario ingreso todos los datos
        if (code.equals("")|| name.equals("")|| color.equals("")) 
        {
            JOptionPane.showMessageDialog(this, "llena todos los campos");
            
        }else 
        {
            //crear un cat
            clsCat cat = new clsCat(breed,code, name, bornYear, color, healthStatus);
            ctlPet.CreatePet(cat); //puente entre vista con el modelo
            this.FillJlist(); // llamar el metodo para agregar a la lista
            JOptionPane.showMessageDialog(this, "La informacion fue guardada correctamente");
            this.clearCatFields(); // limpiar campos
        }
        
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(this, "Por favor adicione un año valido");
       
       }  */
   try 
       {
       String code = txtCodeCat.getText();
       String name = txtNameCat.getText();
       String color = txtColorCat.getText();
       int bornYear = Integer.parseInt(txtBornYearCat.getText());
       String breed = cbBreedCat.getSelectedItem().toString();
       String healthStatus = cbHealthStatusCat.getSelectedItem().toString();
       
       // validar que el usuario ingreso todos los datos
        if (code.equals("")|| name.equals("")|| color.equals("")) 
        {
            JOptionPane.showMessageDialog(this, "llena todos los campos");
            
        }else 
        {
            //crear un dog
            clsCat cat = new clsCat(breed, code, name, bornYear, color, healthStatus);
            boolean respuesta = ctlPet.CreatePet(cat);
            if (respuesta == true) {
            //this.consultarFrases();
            JOptionPane.showMessageDialog(this, "¡Felicidades!, has agregado");
            this.clearCatFields();// limpiar campos
        }
            
        }
        
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(this, "Por favor adicione un año valido");
       
       }
      
   
    }//GEN-LAST:event_btncrearCatActionPerformed

    private void btnCrearDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearDogActionPerformed
        // TODO add your handling code here:
         try 
       {
       String code = txtCodeDog.getText();
       String name = txtNameDog.getText();
       String color = txtColorDog.getText();
       int bornYear = Integer.parseInt(txtBornYearDog.getText());
       String breed = cbBreedDog.getSelectedItem().toString();
       String healthStatus = cbHealthStatusDog.getSelectedItem().toString();
       boolean pedigree = cbPedigree.isSelected();
       
       // validar que el usuario ingreso todos los datos
        if (code.equals("")|| name.equals("")|| color.equals("")) 
        {
            JOptionPane.showMessageDialog(this, "llena todos los campos");
            
        }else 
        {
            //crear un dog
            clsDog dog = new clsDog(breed, pedigree, code, name, bornYear, color, healthStatus);
            boolean respuesta = ctlPet.CreatePet(dog);
            if (respuesta == true) {
            //this.consultarFrases();
            JOptionPane.showMessageDialog(this, "¡Felicidades!, has agregado");
            this.clearDogFields(); // limpiar campos
        }
            
        }
        
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(this, "Por favor adicione un año valido");
       
       }
    }//GEN-LAST:event_btnCrearDogActionPerformed

    private void FillJlist ()  // metodo para adicionar a la lista
    {
        DefaultListModel model = new DefaultListModel ();
        int index=0;
        for (clsDog dog : dogObjectList) 
        {
            String data= dog.getName()+ " - " + dog.getBreed() + " - perro";
            model.add(index, data);
            index++;
        }
        petList.setModel(model); // adicionar a la lista
    }
    //metodo limpiar campos
    private void clearDogFields()
    {
        txtCodeDog.setText("");
        txtNameDog.setText("");
        txtColorDog.setText("");
        txtBornYearDog.setText("");
        cbHealthStatusDog.setSelectedItem(0);
        cbBreedDog.setSelectedItem(0);
        cbPedigree.setSelected(false);
    
    }
    
    private void clearCatFields()
    {
        txtCodeCat.setText("");
        txtNameCat.setText("");
        txtColorCat.setText("");
        txtBornYearCat.setText("");
        cbHealthStatusCat.setSelectedItem(0);
        cbBreedCat.setSelectedItem(0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCat;
    private javax.swing.JButton btnBuscarDog;
    private javax.swing.JButton btnCrearDog;
    private javax.swing.JButton btnEditarCat;
    private javax.swing.JButton btnEditarDog;
    private javax.swing.JButton btnEliminarCat;
    private javax.swing.JButton btnEliminarDog;
    private javax.swing.JButton btncrearCat;
    private javax.swing.JComboBox<String> cbBreedCat;
    private javax.swing.JComboBox<String> cbBreedDog;
    private javax.swing.JComboBox<String> cbHealthStatusCat;
    private javax.swing.JComboBox<String> cbHealthStatusDog;
    private javax.swing.JCheckBox cbPedigree;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> petList;
    private javax.swing.JTextField txtBornYearCat;
    private javax.swing.JTextField txtBornYearDog;
    private javax.swing.JTextField txtCodeCat;
    private javax.swing.JTextField txtCodeDog;
    private javax.swing.JTextField txtColorCat;
    private javax.swing.JTextField txtColorDog;
    private javax.swing.JTextField txtNameCat;
    private javax.swing.JTextField txtNameDog;
    // End of variables declaration//GEN-END:variables
}

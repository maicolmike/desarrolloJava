/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.ClsJugador;
import Clases.ClsRespuesta;
import Controladores.CtlJugador;
import java.util.LinkedList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author TITANQ
 */
public class FrameAgregarJugadoresJuego extends javax.swing.JFrame {

    CtlJugador controlador;
    FramePrincipal framePrincipal;
    FrameJuego frameJuego;
    LinkedList<ClsJugador> jugadoresBd;
    LinkedList<ClsJugador> jugadoresSeleccionados;
    int numeroJugadores = 1;

    String jugadoresLabel = "";

    /**
     * Creates new form FrameAgregarJugadoresJuego
     */
    public FrameAgregarJugadoresJuego(int numeroJugadores, FramePrincipal framePrincipal) {
        initComponents();
        this.setLocationRelativeTo(null);

        this.controlador = new CtlJugador();
        this.framePrincipal = framePrincipal;
        this.jugadoresSeleccionados = new LinkedList<>();

        this.actualizarJugadores(numeroJugadores);
    }

    public void actualizarJugadores(int numeroJugadores) {

        this.numeroJugadores = numeroJugadores;
        this.jLabelJugadoresAgregados.setText("");
        this.jugadoresLabel = "";
        this.jugadoresSeleccionados.removeAll(this.jugadoresSeleccionados);
        this.jComboBoxJugadores.removeAllItems();;

        this.jugadoresBd = this.controlador.consultarJugadores();

        for (ClsJugador jug : jugadoresBd) {
            this.jComboBoxJugadores.addItem(jug.getId() + " - " + jug.getNombre());

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAgregarJugador = new javax.swing.JButton();
        jLabelJugadoresAgregados = new javax.swing.JLabel();
        jComboBoxJugadores = new javax.swing.JComboBox<>();
        jButtonRegistrarJugador = new javax.swing.JButton();
        jTextIdUsuario = new javax.swing.JTextField();
        jTextNombreUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonAgregarJugador.setText("Agregar");
        jButtonAgregarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarJugadorActionPerformed(evt);
            }
        });

        jLabelJugadoresAgregados.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabelJugadoresAgregados.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelJugadoresAgregados.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jButtonRegistrarJugador.setText("Registrar jugador nuevo");
        jButtonRegistrarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarJugadorActionPerformed(evt);
            }
        });

        jLabel1.setText("Id");

        jLabel2.setText("Nombre");

        jLabel3.setText("Seleccione jugador:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jButtonAgregarJugador))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jButtonRegistrarJugador))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelJugadoresAgregados, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxJugadores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jTextIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextNombreUsuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonRegistrarJugador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAgregarJugador)
                .addGap(12, 12, 12)
                .addComponent(jLabelJugadoresAgregados, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAgregarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarJugadorActionPerformed

        try {
            String jugadorSeleccionado = this.jComboBoxJugadores.getSelectedItem().toString();

            String[] partesNombre = jugadorSeleccionado.split("-");
            String idTexto = partesNombre[0].trim();

            int id = Integer.parseInt(idTexto);
            ClsJugador jugador = this.buscarJugador(this.jugadoresBd, idTexto);

            if (jugador != null) {
                this.jugadoresSeleccionados.add(jugador);
                this.jugadoresLabel += jugador.getNombre() + " ";
                this.jLabelJugadoresAgregados.setText(jugadoresLabel);
            }

            if (this.jugadoresSeleccionados.size() == this.numeroJugadores) {
                if (this.frameJuego == null) {
                    this.frameJuego = new FrameJuego(this.jugadoresSeleccionados);
                    this.frameJuego.setFramePrincipal(this.framePrincipal);
                } else {
                    this.frameJuego.prepararJuego(this.jugadoresSeleccionados);
                }
                this.setVisible(false);
                this.frameJuego.setVisible(true);
            }

        } catch (Exception e) {
        }


    }//GEN-LAST:event_jButtonAgregarJugadorActionPerformed

    private void jButtonRegistrarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarJugadorActionPerformed

 /*       try {

            String idTexto = this.jTextIdUsuario.getText();

            int id = Integer.parseInt(idTexto);

            String nombre = this.jTextNombreUsuario.getText();
            

            if (idTexto.equals("") || nombre.equals("")) {
                JOptionPane.showMessageDialog(this, "Te han faltado campos por diligenciar");
                return;
            } else {
                ClsJugador jugador = new ClsJugador(idTexto, nombre);

                ClsRespuesta respuesta = this.controlador.agregarJugador(jugador);
                JOptionPane.showMessageDialog(this, respuesta.getMensajeUsuario());

                if (respuesta.isProcesoCompleto()) {
                    this.actualizarJugadores(this.numeroJugadores);
                }

            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El id debe ser númerico");
        }   */
 
 try {

            String idTexto = this.jTextIdUsuario.getText();

            int id = Integer.parseInt(idTexto);

            String nombre = this.jTextNombreUsuario.getText();
           

            if (idTexto.equals("") || nombre.equals("")) {
                JOptionPane.showMessageDialog(this, "Te han faltado campos por diligenciar");
                return;
            } else {
                ClsJugador jugador = new ClsJugador(idTexto, nombre);

                ClsRespuesta respuesta = this.controlador.agregarJugador(jugador);
                JOptionPane.showMessageDialog(this, respuesta.getMensajeUsuario());
                //listar la tabla con las frases
                 if (respuesta.isProcesoCompleto()) {
                    this.actualizarJugadores(this.numeroJugadores);
                }
                 //limpiar
                 this.jTextIdUsuario.setText("");
                 this.jTextNombreUsuario.setText("");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El id debe ser númerico");
        }


    }//GEN-LAST:event_jButtonRegistrarJugadorActionPerformed

    public ClsJugador buscarJugador(LinkedList<ClsJugador> jugadores, String id) {

        for (ClsJugador j : jugadores) {
            if (j.getId().equals(id)) {
                return j;
            }
        }

        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameAgregarJugadoresJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameAgregarJugadoresJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameAgregarJugadoresJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameAgregarJugadoresJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameAgregarJugadoresJuego(1, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregarJugador;
    private javax.swing.JButton jButtonRegistrarJugador;
    private javax.swing.JComboBox<String> jComboBoxJugadores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelJugadoresAgregados;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextIdUsuario;
    private javax.swing.JTextField jTextNombreUsuario;
    // End of variables declaration//GEN-END:variables
}
